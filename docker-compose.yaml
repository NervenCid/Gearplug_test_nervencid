#Esto es un comentario

#Para ejecutar este archivo:
#   >docker-compose up

#Definimos la version (En este caso '3.2' es OBLIGATORIO)
version: '3.2'

#Definimos los servicios
services:

    #Declaramos el servicio 'rabbitmq'
    rabbitmq:
        #Seleccionamos la imagen
        image: "rabbitmq:management"
        #Definimos el nombre del contenedor
        container_name: rabbitmq
        #Definimos los puertos
        ports:
            - "5672:5672" #Este puerto sirve para publicar y consumir mensajes
            - "15672:15672" #Este puerto permite navegar en la herramienta de administracion de 'RabbitMQ'
        #Definimos el volumen donde se almacenaran los datos
        volumes:
            - ./Infraestructura/rabbitmqdata:/var/lib/rabbitmq"
        #Declaramos el 'hostname' para gestionar internamente como se almacena la informacion
        hostname: rabbitmq
        #Definimos las variables de entorno
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
        extra_hosts:
        - "host.docker.internal:host-gateway"

    #Iniciamos la 'api' de 'django rest framework'    
    web:
        #Indicamos las dependencias de esta etapa
        depends_on:
            - rabbitmq
        #Construimos la imagen basada en el archivo 'Dockerfile' del directorio actual 
        build: .
        #Definimos los puertos
        ports:
            - '8000:8000'
        expose:
            - "8000"
        #Definimos los volumenes que permitiran recargar el codigo en tiempo real
        #Copiamos TODOS los archivos de la carpeta actual a la carpeta '/code dentro del contenedor' y viceversa
        #Esto permitira que el contenedor se actualice en tiempo real
        #volumes:
        #    - ./code:/code 
        extra_hosts:
        - "host.docker.internal:host-gateway"
            
    celery_worker:
        #Indicamos las dependencias de esta etapa
        depends_on:
            - rabbitmq
            - web
        build: .
        command: celery -A Gearplug worker -l info -P solo
        extra_hosts:
        - "host.docker.internal:host-gateway"

    celery_beat:
        #Indicamos las dependencias de esta etapa
        depends_on:
            - rabbitmq
            - web
            - celery_worker
        build: .
        command: celery -A Gearplug beat -l info
        extra_hosts:
        - "host.docker.internal:host-gateway"

